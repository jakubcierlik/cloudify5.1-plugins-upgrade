tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.6/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin
  - plugin:cloudify-diamond-plugin

dsl_definitions:

  client_config: &client_config
    auth_url: { get_secret: auth_url }
    username: { get_secret: username }
    password: { get_secret: password }
    project_name: { get_secret: project_name }
    region_name: { get_secret:  region_name }
    user_domain_name: { get_secret: user_domain_name }
    project_domain_name: { get_secret: project_domain_name }

inputs:

  image_id:
    default: d732f334-28d8-4351-b64f-96375314c4be

  flavor_name:
    default: m1.small

  keypair_name:
    default: postkeypair

  network_id:
    default: cfy-network

  security_group_name:
    default: all-ip-in

node_types:
  my_type:
    derived_from: cloudify.nodes.WebServer
    properties:
      collectors_config: {}

node_templates:
  host:
    type: cloudify.nodes.openstack.Server
    properties:
      client_config: *client_config
      agent_config:
        user: root
        install_method: remote
        port: 22
        key: { get_secret: agent_key_private }
        # network: external
      resource_config:
        key_name: { get_input: keypair_name }
        image_id: { get_input: image_id }
        flavor_id: { get_input: flavor_name }
        user_data: { get_attribute: [ cloudify_host_cloud_config, cloud_config ] }
      use_public_ip: true
    relationships:
      - target: public_subnet_nic
        type: cloudify.relationships.openstack.server_connected_to_port
      - target: private_subnet_nic
        type: cloudify.relationships.openstack.server_connected_to_port
      - type: cloudify.relationships.depends_on
        target: cloudify_host_cloud_config
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
              interval: 10
        start: diamond.diamond_agent.tasks.start
          # implementation: diamond.diamond_agent.tasks.add_collectors
          # inputs:
          #   collectors_config:
          #     CPUCollector: {}
          #     DiskUsageCollector:
          #       config:
          #         devices: x?vd[a-z]+[0-9]*$
          #     MemoryCollector: {}
          #     NetworkCollector: {}
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall

  cloudify_host_cloud_config:
    type: cloudify.nodes.CloudInit.CloudConfig
    properties:
      resource_config:
        users:
          - name: root
            primary-group: wheel
            shell: /bin/bash
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            ssh-authorized-keys:
              - { get_secret: agent_key_public }

  app:
    type: cloudify.nodes.WebServer
    properties:
      port: 8080
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
    interfaces:
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors 
          inputs:
            collectors_config:
              CPUCollector: {}
              DiskUsageCollector:
                config:
                  devices: x?vd[a-z]+[0-9]*$
              MemoryCollector: {}
              NetworkCollector: {}         
        stop:
          implementation: diamond.diamond_agent.tasks.del_collectors

  public_subnet_nic:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: public_network
      - type: cloudify.relationships.depends_on
        target: public_subnet
      - type: cloudify.relationships.openstack.port_connected_to_security_group
        target: security_group
      - type: cloudify.relationships.openstack.port_connected_to_floating_ip
        target: public_ip

  private_subnet_nic:
    type: cloudify.nodes.openstack.Port
    properties:
      client_config: *client_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: private_network
      - type: cloudify.relationships.depends_on
        target: private_subnet
      - type: cloudify.relationships.openstack.port_connected_to_security_group
        target: security_group

  security_group:
    type: cloudify.nodes.openstack.SecurityGroup
    properties:
      client_config: *client_config
      resource_config:
        name: { get_input: security_group_name }
      use_external_resource: true

  public_ip:
    type: cloudify.nodes.openstack.FloatingIP
    properties:
      client_config: *client_config
      resource_config:
        floating_network_name: { get_property: [ external_network, resource_config, name ] }

  private_subnet:
    type: cloudify.nodes.openstack.Subnet
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        name: cfy-subnet-priv
    relationships:
      - target: private_network
        type: cloudify.relationships.contained_in

  private_network:
    type: cloudify.nodes.openstack.Network
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        name: cfy-network-priv

  public_subnet:
    type: cloudify.nodes.openstack.Subnet
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        name: cfy-subnet
    relationships:
      - target: public_network
        type: cloudify.relationships.contained_in
      - target: router
        type: cloudify.relationships.openstack.subnet_connected_to_router

  public_network:
    type:  cloudify.nodes.openstack.Network
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        name: cfy-network

  router:
    type: cloudify.nodes.openstack.Router
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        name: cfy-router
    relationships:
      - target: external_network
        type: cloudify.relationships.connected_to

  external_network:
    type: cloudify.nodes.openstack.Network
    properties:
      client_config: *client_config
      use_external_resource: true
      resource_config:
        name: GATEWAY_NET
